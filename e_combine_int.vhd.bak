library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;



entity e_int_adder is 
port
	(	
	 slv_x :in std_logic_vector(7 downto 0);
	 slv_y :in std_logic_vector(7 downto 0);
	 
	 slv_out_signed :out std_logic_vector(15 downto 0);
	 slv_out_unsigned: out std_logic_vector(15 downto 0)

	);
end entity e_int_adder;


architecture a_int_adder of e_int_adder is
	signal slv_out_temp: std_logic_vector(15 downto 0);
	signal slv_add_temp: std_logic_vector(7 downto 0);

begin
	
	--slv_out_temp <= std_logic_vector (signed(slv_x) *  10);  
	--slv_out_signed <=	std_logic_vector(signed(slv_out_temp) + signed(slv_y));
	--slv_out_unsigned <= std_logic_vector (unsigned(slv_out_temp) + unsigned(slv_y));

	
		
	slv_out_temp <= std_logic_vector (signed(slv_x) *  10);  
	slv_out_signed <=	std_logic_vector(signed(slv_out_temp) + signed(slv_y));
	slv_add_temp <= std_logic_vector (signed(slv_x) + signed(slv_y));
	slv_out_unsigned <= "00000000" & slv_add_temp;
end architecture a_int_adder;




