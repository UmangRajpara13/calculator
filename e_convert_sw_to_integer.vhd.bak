library ieee;
use ieee.std_logic_1164.all;


entity e_convert_Sw_to_integer is 
   port (  swithch_intput   : in    std_logic_vector(8 downto 0);
           out_integer      : out   integer
				);
end entity e_my_finite_SM;

architecture a_my_finite_SM of e_my_finite_SM is

---- Declaration Part -----------------------------------------------

-- Signal Declarations
   

-- Type Declarations
  signal slv_integer : integer; 
---- Synthesis Attribute Declarations
--	attribute syn_encoding: string;
--	attribute syn_encoding of t_fsm_states : type is "0000 0001 0010 0011 0100 0101 0110 0111 1000";
	signal pattern_0,pattern_1,pattern_2,pattern_3 : std_logic_vector(3 downto 0);

begin

---- Assignment Part ------------------------------------------------

-- Concurrent Assignments:


   select_integer: process (switch_input) -- drive the red LEDs for each state
   begin
      case switch_input IS
         when "000000001" =>   slv_integer <= 1;
         when "000000010" =>   slv_integer <= 2;
         when "000000100" =>   slv_integer <= 3;
         when "000001000" =>   slv_integer <= 4;
         when "000010000" =>   slv_integer <= 5;
			when "000100000" =>   slv_integer <= 6;
			when "001000000" =>   slv_integer <= 7;
			when "010000000" =>   slv_integer <= 8;
			when "100000000" =>   slv_integer <= 9;
         end case;
   end process select_integer; -- LEDs

end architecture a_my_FSM;